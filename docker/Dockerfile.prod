FROM node:gallium-alpine AS builder

ARG APP=${APP}
ARG PORT_NGINX=${PORT_NGINX}

ENV PUBLIC_URL=${PUBLIC_URL}

WORKDIR /usr/local/apps/${APP}

# override base log level (info)
ENV NPM_CONFIG_LOGLEVEL warn
ENV PATH=/usr/local/apps/${APP}/node_modules/.bin:$PATH

COPY package.json .
RUN printf "Docker image built-in Yarn version: "; yarn --version

# re-generate .yarnrc.yml rather than copying across
# .yarn/ and .yarnrc.yml from host machine to change
# Yarn version from 1.22.19 that comes with
# node:gallium-alpine to 3.1.1
RUN apk update && apk add --update git && rm -rf /var/cache/apk/*
RUN corepack enable \
    && corepack prepare yarn@stable --activate \
    && yarn set version 3.1.1 \
    && yarn plugin import interactive-tools \
    && echo -e "nodeLinker: node-modules\n\n$(cat /usr/local/apps/${APP}/.yarnrc.yml)" > /usr/local/apps/${APP}/.yarnrc.yml \
    && cat /usr/local/apps/${APP}/.yarnrc.yml \
    && printf "Switched to Yarn version: "; yarn --version \
    && yarn install

COPY . .

RUN NODE_ENV=production yarn build

# ===========================================================
FROM nginx:stable-alpine

ARG APP=${APP}
WORKDIR /usr/share/nginx/html

COPY --from=builder /usr/local/apps/${APP}/docker/nginx/nginx.conf /etc/nginx/nginx.conf
COPY --from=builder /usr/local/apps/${APP}/docker/nginx/default.conf /etc/nginx/conf.d/default.conf
# replace default nginx index.html file
COPY --from=builder /usr/local/apps/${APP}/build/index.html /usr/share/nginx/html/index.html
RUN mkdir -p /usr/share/nginx/html/${APP}
# all other files in APP subfolder 
COPY --from=builder /usr/local/apps/${APP}/build /usr/share/nginx/html/${APP}

COPY --from=builder /usr/local/apps/${APP}/.env .
# update .env with NODE_ENV=production incase not set correctly so is processed by env.sh
RUN echo "$(sed 's/.*NODE_ENV=.*/NODE_ENV=production/' /usr/share/nginx/html/.env)" > .env

COPY --from=builder /usr/local/apps/${APP}/env.sh /usr/share/nginx/html/env.sh
RUN chmod +x /usr/share/nginx/html/env.sh

EXPOSE ${PORT_NGINX}

# add bash to support bash syntax instead of ash
RUN apk update && apk add --update bash && rm -rf /var/cache/apk/*
RUN /bin/bash -c /usr/share/nginx/html/env.sh
RUN mv /usr/share/nginx/html/env-config.js /usr/share/nginx/html/${APP}/env-config.js

# run nginx in debug mode (foreground)
CMD ["nginx", "-g", "daemon off;"]